[
  {
    "description": "oneOf with objects and type pattern",
    "schema": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "enum": [
                "TYPE_1"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "enum": [
                "TYPE_2"
              ]
            }
          }
        }
      ]
    },
    "tests": [
      {
        "description": "first oneOf valid",
        "data": {
          "type": "INVALID_TYPE"
        },
        "valid": false
      }
    ]
  }
  ]